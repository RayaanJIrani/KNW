#include <Servo.h>
#include <Sleep_n0m1.h>
#include <EEPROM.h>
Servo base_servo; // Arduinio IO port hook up 
Servo panel_servo; 
#define Photo A5; // Sets the input sensor for the photoresistor as analog 5 (do not change)
#define Solar A6;


Sleep sleep;
int read_solar();
double read_photoresistor(int pin);
unsigned long time;
int sleepLogger = 0;
Servo log_servo;

  void setup() {
    Serial.begin(9600); // This starts the Serial port allowing Octopus have a IO stream with laptop.
    base_servo.attach(11);
    panel_servo.attach(10);
   
 

    runSolarSystem();
  }

  void loop() {
    



  }

  void runSolarSystem(){
    double timeInMins = 0;
    for(int i = 0; i < 48; i++){
     if(i % 3 == 0){
      time= millis();
      int solar = read_solar();
      solar_orient();
      timeInMins = time / 60000; 
      setEEPROMVal(2*i, timeInMins);
      setEEPROMVal(2*i + 1, solar);
      sleep.sleepDelay(570000);
      }
      else{
      time= millis();
      timeInMins = time / 60000; 
      int solar = read_solar();
      setEEPROMVal(2*i, timeInMins);
      setEEPROMVal(2*i + 1, solar);
      sleep.sleepDelay(600000);
      }  
    }
    
   }

  unsigned long getEEPROMVal(int index){
    unsigned long output = 0;
    output = EEPROM[2*index] * 256 + EEPROM[2*index+1];
    return output;
  }



  void setEEPROMVal(int index, int val){
    int firstNum = val / 256;
    int secondNum = val % 256;
    EEPROM[index*2] = firstNum;
    EEPROM[index*2 + 1] = secondNum;
  }



  int read_solar(){
      return analogRead(A6);
 }

  void move_analog_motor(int degrees, int pin){
      log_servo.attach(pin);
      log_servo.write(degrees);
 }

  double  read_photoresistor(int pin){
      double light_level1 = analogRead(pin);
      double light_level2 = analogRead(pin);
      double light_level3 = analogRead(pin);
      double light_level = (light_level1 + light_level2 + light_level3) / 3.0;
      return light_level;
 }



  void solar_orient(){
    double min_value = 1024;
    double min_deg = 0;
    double min_value2 = 1024;
    double min_deg2 = 0;
    //double avg = photo_vals[0] + photo_vals[1] + photo_vals[2] + photo_vals[3]) / 4.0;
    base_servo.write(0);
    panel_servo.write(0);
    for (int i = 0; i < 180; i += 5){
     base_servo.write(i);
     Serial.print("Base Servo Degree ");
     Serial.println(i);
     double photo_vals[4] = {read_photoresistor(A8), read_photoresistor(A9), read_photoresistor(A10), read_photoresistor(A11)};
     double avg = (photo_vals[0] + photo_vals[1] + photo_vals[2] + photo_vals[3]) / 4.0;
     if (avg < min_value){
        min_value = avg;
        min_deg = i;
     }
     delay(2000);
    }
    base_servo.write(min_deg);
    Serial.print("Final Base Servo Degree");
    Serial.println(min_deg);
 
  for(int i = 0; i < 180; i +=5){
     panel_servo.write(i);
     Serial.print("Panel Servo Degree ");
     Serial.println(i);
     double photo_vals[4] = {read_photoresistor(A8), read_photoresistor(A9), read_photoresistor(A10), read_photoresistor(A11)};
     double avg = (photo_vals[0] + photo_vals[1] + photo_vals[2] + photo_vals[3]) / 4.0;
     if (avg < min_value2){
        min_value2 = avg;
        min_deg2 = i;
     }
     delay(2000);
    }
  panel_servo.write(min_deg2);
  Serial.print("Final Solar Panel Servo Degree");
  Serial.println(min_deg2);

  }
